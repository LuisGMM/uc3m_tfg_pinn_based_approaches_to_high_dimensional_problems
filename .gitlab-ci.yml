# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:3.11

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/topics/caching/
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/


stages:
  - Tests


before_script:
  - python --version  # For debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - pip install -e .
  - pip install -r ./requirements/required.txt
  - pip install -r ./requirements/tests.txt
  # - pip install -r ./requirements/docs.txt

Unit-test:

  stage: Tests

  script:
    - python -m pytest --cov-report=html --cov=backbone .

  artifacts:
    paths:
      - coverage

    expire_in: 30 days
  
  allow_failure: true

Type-test:

  stage: Tests

  script:
    - mypy src
  
  allow_failure: false

Lint-test:

  stage: Tests

  script:
    - flake8 src
  
  allow_failure: false

# run:
#   script:
#     - python setup.py bdist_wheel
#     # an alternative approach is to install and run:
#     - pip install dist/*
#     # run the command here
#   artifacts:
#     paths:
#       - dist/*.whl

